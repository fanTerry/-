<template>
  <div class='Page'>
    <header class='mod_header'>
      <nav-bar :pageTitle="'销售管理'"></nav-bar>
    </header>

    <div class='main' id="mainId">
      <mescroll ref="mescroll" @downCallback="downCallback" @upCallback="upCallback" @mescrollInit="mescrollInit"
        :isShowEmpty="false">
        <div class="title_list">
          <div class="item">
            <p class="txt"><i class="register_icon"></i>注册</p>
            <p class="num">{{sumData.userCount?sumData.userCount:0}}</p>
          </div>
          <div class="item">
            <p class="txt"><i class="recharge_icon"></i>充值</p>
            <p class="num">{{sumData.scoreSum?sumData.scoreSum:0}} +
              {{sumData.lossProfitAddScoreSum?sumData.lossProfitAddScoreSum:0 }}(人工) </p>
          </div>
          <div class="item">
            <p class="txt"><i class="value_icon"></i>流水</p>
            <p class="num">{{sumData.betAmount?sumData.betAmount:0}}</p>
          </div>
        </div>
        <div class="info">
          <div class="title">
            <span class="phone">手机</span>
            <span class="register " :class="{'active':riFlag}" @click="sortByType(1)">注册<i></i></span>
            <span class="recharge " :class="{'active':reFlag}" @click="sortByType(2)">充值<i></i></span>
            <span class="bet " :class="{'active':betFlag}" @click="sortByType(3)">投注<i></i></span>
          </div>
          <ul class="list">
            <li v-for="(item,index) in saleDataList" :key="index">
              <span class="phone">{{item.phone}}</span>
              <span class="register ">{{item.registerTime | dateFmt('yyyy/MM/dd/hh:mm')}}</span>
              <span class="recharge ">{{item.scoreSum | formatMoney(2,"") }}</span>
              <span class="bet ">{{item.betAmount ?item.betAmount:0 | formatMoney(2,"") }}</span>
            </li>
          </ul>
        </div>
        <div class="tips" v-if="!hasNext">
          <!-- <p>更新时间：2020/4/23/11:10</p> -->
          <p>每10分钟更新统计数据，请手动刷新页面获取实时数据</p>
        </div>
      </mescroll>
    </div>
    <footer class='mod_footer'>

    </footer>
  </div>
</template>

<script>
import navBar from "../../components/header/nav_bar/index.vue";
import mescroll from "../../components/common/mescroll.vue";

export default {
  components: { navBar, mescroll },
  props: [],

  data() {
    return {
      requestParam: {
        pageNo: 1,
        pageSize: 30,
        totalPages: 0,
        sortType: 1,
        sortFlag: true
      },
      currPageSize: 10,
      loadMore: true,
      saleDataList: [],
      reFlag: true,
      riFlag: true,
      betFlag: true,
      hasNext: true,
      sumData: {}
    };
  },
  mounted() {
    this.getPersonSumData();
  },
  methods: {
    mescrollInit(mescroll) {
      this.mescroll = mescroll; // 如果this.mescroll对象没有使用到,则mescrollInit可以不用配置
    },
    downCallback() {
      this.saleDataList = [];
      this.requestParam.pageNo = 1;
      this.getIndexMatchData().then(data => {
        this.mescroll.endSuccess(this.currPageSize, this.loadMore);
      });
    },
    upCallback() {
      this.requestParam.pageNo += 1;
      this.getIndexMatchData().then(data => {
        this.mescroll.endSuccess(this.currPageSize, this.loadMore);
      });
    },
    getIndexMatchData() {
      let param = {};
      param = this.requestParam;
      return this.$post("/api/quizSale/personData", param)
        .then(rsp => {
          const dataResponse = rsp;
          if (dataResponse.code == 200) {
            this.saleDataList = this.saleDataList.concat(
              dataResponse.data.dataList
            );
            this.hasNext = dataResponse.data.hasNext;
          }
        })
        .catch(error => {
          console.log(error);
        });
    },

    getPersonSumData() {
      let param = {};
      param = this.requestParam;
      return this.$post("/api/quizSale/personDataSum", param)
        .then(rsp => {
          const dataResponse = rsp;
          if (dataResponse.code == 200) {
            this.sumData = dataResponse.data;
          } else if (dataResponse.code == "3333") {
            this.$toast(dataResponse.message);
          }
        })
        .catch(error => {
          console.log(error);
        });
    },

    getSum() {
      let param = {};
      param = this.requestParam;
      return this.$post("/api/quizSale/personData", param)
        .then(rsp => {
          const dataResponse = rsp;
          if (dataResponse.code == 200) {
            this.saleDataList = this.saleDataList.concat(
              dataResponse.data.dataList
            );
            this.hasNext = dataResponse.data.hasNext;
          }
        })
        .catch(error => {
          console.log(error);
        });
    },

    sortByType(type) {
      if (this.saleDataList.length == 0) {
        return;
      }
      if (type == 1) {
        this.riFlag = !this.riFlag;
        this.requestParam.sortFlag = this.riFlag;
      } else if (type == 2) {
        this.reFlag = !this.reFlag;
        this.requestParam.sortFlag = this.reFlag;
      } else if (type == 3) {
        this.betFlag = !this.betFlag;
        this.requestParam.sortFlag = this.betFlag;
      }
      this.requestParam.sortType = type;
      this.requestParam.pageNo = 1;
      this.requestParam.pageSize = 30;
      this.saleDataList = [];
      this.getIndexMatchData();
    }
  }
};
</script>

<style lang='scss' scoped>
@import "../../assets/common/_mixin";
@import "../../assets/common/_base";

.title_list {
  @extend .flex_v_h;
  flex: none;
  -webkit-flex: none;
  height: 24vw;
  @include getBgLinear(bottom, #ba3129, #942d27);
  .item {
    position: relative;
    flex: 1;
    -webkit-flex: 1;
    text-align: center;
    &:first-child {
      flex: none;
      -webkit-flex: none;
      text-align: left;
      padding-left: 3.6vw;
      .txt {
        justify-content: flex-start;
        -webkit-justify-content: flex-start;
      }
    }
    &:last-child {
      flex: none;
      -webkit-flex: none;
      text-align: right;
      padding-right: 3.6vw;
      .txt {
        justify-content: flex-end;
        -webkit-justify-content: flex-end;
      }
    }
  }
  .txt {
    @extend .flex_v_h;
    color: #fff;
    i {
      width: 4vw;
      height: 4vw;
      margin-right: 0.9333vw;
    }
  }
  .num {
    padding-top: 3.2vw;
    font-size: 4.8vw;
    font-weight: bold;
    color: #fff;
  }
  .register_icon {
    @include getBgImg(
      "../../assets/images/user_center/sales/register_icon.png"
    );
  }
  .recharge_icon {
    @include getBgImg(
      "../../assets/images/user_center/sales/recharge_icon.png"
    );
  }
  .value_icon {
    @include getBgImg("../../assets/images/user_center/sales/value_icon.png");
  }
}

.main {
  @extend .flex;
  flex-direction: column;
  -webkit-flex-direction: column;
}

.info {
  @extend .flex;
  flex-direction: column;
  -webkit-flex-direction: column;
  flex: 1;
  -webkit-flex: 1;
  margin-top: -2.6667vw;
  background-color: #fff;
  border-radius: 2.6667vw 2.6667vw 0 0;
  overflow: hidden;
  .title {
    @extend .flex_hc;
    font-size: 3.4667vw;
    padding: 3.7333vw 0;
    font-weight: bold;
    color: #333;
  }
  .phone {
    width: 25.3333vw;
    text-align: center;
  }
  .register {
    width: 28vw;
    text-align: center;
  }
  .recharge {
    width: 21.3333vw;
    text-align: right;
  }
  .bet {
    width: 21.3333vw;
    text-align: right;
  }
  .register,
  .recharge,
  .bet {
    i {
      position: relative;
      top: 0.5333vw;
      margin-left: 1.3333vw;
      @include getTriangle(1.2vw, #333, down);
    }
    &.active {
      i {
        top: -0.5333vw;
        transform: rotate(180deg);
      }
    }
  }
}

.list {
  flex: 1;
  -webkit-flex: 1;
  overflow: auto;
  li {
    @extend .flex_hc;
    font-size: 3.2vw;
    height: 8vw;
    color: #333;
    &:nth-child(2n-1) {
      background-color: #f8f8f8;
    }
  }
}

.tips {
  flex: none;
  -webkit-flex: none;
  padding: 2.6667vw 0 3.2vw 0;
  text-align: center;
  p {
    line-height: 5.8667vw;
    font-size: 3.2vw;
    color: #999;
  }
}
</style>
