<template>
  <div class='Page'>
    <header class='mod_header'>
      <span>投资记录</span>
    </header>
    <div class='main'>
      <mescroll ref="mescroll" @downCallback="downCallback" @upCallback="upCallback" @mescrollInit="mescrollInit">
        <div class="record_list">
          <ul>
            <li v-for="(item,index) in recordList" :key="index" @click="goUrlPage('detail',item.issuse)">
              <p class="time">{{item.issuse}}</p>
              <p class="get">回报 {{item.returnAmt}}</p>
              <p class="award">总投资 {{item.betAmt}}</p>
              <span class="detail">查看详情</span>
            </li>
          </ul>
        </div>
      </mescroll>
    </div>
    <footer class='mod_footer'>
      <div class="return_home">
        <a @click="goUrlPage('/game/goldEmpire')"><span>返回王宫</span></a>
      </div>
    </footer>
  </div>
</template>

<script>
import mescroll from '../../../components/common/mescroll.vue';

export default {
  components: { mescroll },
  props: [],
  data() {
    return {
      recordQueryParam: {
        pageNo: 1,
        pageSize: 20
      },
      hasNext: true,
      investRecord: null,
      recordList: []
    };
  },
  methods: {
    summary() {
      let form = new FormData();
      form.append('page', this.recordQueryParam.pageNo);
      form.append('limit', this.recordQueryParam.pageSize);
      return this.$post('/agency/api/gameOrder/summary', form)
        .then(res => {
          // console.log(res);
          this.investRecord = res.data;
          this.recordList = this.recordList.concat(res.data.records);
        })
        .catch(error => {
          console.log(error);
        });
    },
    downCallback() {
      this.recordList = [];
      this.recordQueryParam.pageNo = 1;
      this.summary().then(() => {
        if (this.investRecord.pages <= this.recordQueryParam.pageNo) {
          this.hasNext = false;
        } else {
          this.hasNext = true;
        }
        this.$nextTick(() => {
          this.mescroll.endSuccess(this.recordQueryParam.pageSize, this.hasNext);
        });
      });
    },
    upCallback() {
      this.recordQueryParam.pageNo += 1;
      this.summary().then(() => {
        if (this.investRecord.pages <= this.recordQueryParam.pageNo) {
          this.hasNext = false;
        }
        this.$nextTick(() => {
          this.mescroll.endSuccess(this.recordQueryParam.pageSize, this.hasNext);
        });
      });
    },

    mescrollInit(mescroll) {
      this.mescroll = mescroll;
    },
    goUrlPage(url, query) {
      this.$router.push({
        path: url,
        query: { issuse: query }
      });
    }
  }
};
</script>

<style lang='scss' scoped>
@import '../../../assets/common/_base';
@import '../../../assets/common/_mixin';

.main {
  padding-bottom: 5.3333vw;
  @include getBgImg('../../../assets/images/game/goldempire/record_bg.png');
  background-size: 100% 100%;
}

.mod_header {
  height: 11.4667vw;
  padding-top: 2.4vw;
  @include getBgImg('../../../assets/images/game/goldempire/title_bg.png');
  background-position: top center;
  text-align: center;
  span {
    font-size: 4vw;
    font-weight: bold;
    background: linear-gradient(
      to bottom,
      rgba(171, 136, 82, 1) 0%,
      rgba(200, 173, 118, 1) 29.78515625%,
      rgba(246, 234, 181, 1) 48.974609375%,
      rgba(252, 239, 202, 1) 79.00390625%,
      rgba(226, 204, 145, 1) 100%
    );
    background: -webkit-linear-gradient(
      top,
      rgba(171, 136, 82, 1) 0%,
      rgba(200, 173, 118, 1) 29.78515625%,
      rgba(246, 234, 181, 1) 48.974609375%,
      rgba(252, 239, 202, 1) 79.00390625%,
      rgba(226, 204, 145, 1) 100%
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
}

.record_list {
  ul {
    @extend .flex_v_justify;
    flex-wrap: wrap;
    -webkit-flex-wrap: wrap;
    padding: 1.8667vw 6.1333vw 0;
  }
  li {
    position: relative;
    width: 41.6vw;
    height: 21.7333vw;
    margin-bottom: 4.4vw;
    padding-left: 2.9333vw;
    @include getBgImg('../../../assets/images/game/goldempire/record_item.png');
  }
  .time {
    padding-top: 1.7333vw;
    font-size: 4vw;
    font-weight: bold;
    color: #e1ecf4;
  }
  .get {
    padding-top: 4vw;
    font-size: 3.7333vw;
    color: #ffe56d;
  }
  .award {
    padding-top: 2.1333vw;
    font-size: 3.7333vw;
    color: #4eb5ff;
  }
  .detail {
    @extend .g_v_mid;
    right: 0;
    width: 9.6vw;
    padding: 2.6667vw;
    font-size: 4vw;
    font-weight: bold;
    color: #28fcff;
  }
}

.return_home {
  @extend .flex_v_h;
  height: 16.2667vw;
  @include getBgImg('../../../assets/images/game/goldempire/footer_bg.png');
  a {
    width: 41.6vw;
    height: 12.6667vw;
    padding: 3.4667vw 0 0 9.3333vw;
    text-align: center;
    @include getBgImg('../../../assets/images/game/goldempire/return_btn.png');
  }
  span {
    font-size: 4.8vw;
    font-weight: bold;
    background: linear-gradient(to bottom, rgba(207, 185, 150, 1) 0%, rgba(255, 251, 241, 1) 78.564453125%);
    background: -webkit-linear-gradient(top, rgba(207, 185, 150, 1) 0%, rgba(255, 251, 241, 1) 78.564453125%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
}
</style>
