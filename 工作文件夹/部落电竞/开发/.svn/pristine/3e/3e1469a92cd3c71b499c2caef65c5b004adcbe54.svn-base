import utils from './libs/utilsTool.js';

/** 根据size格式化传入的对象
 *  @param {string} val 需要格式化的字符串
 *  @param {num} size 保留多少位
 */
exports.subStr = (val, size) => {
    if (!val || val.length == 0 || val == undefined) {
        return;
    }
    if (val.length > size) {
        return val.substring(0, size) + '...';
    } else {
        return val;
    }
};

/** 根据图片地址判断是否取默认图
 *  @param {string} imgUrl 传入的图片地址
 *  @param {string} defaultImg 默认显示的图片地址
 */
exports.getDefaultImg = (imgUrl, defaultImg) => {
    if (!imgUrl) {
        return defaultImg;
    } else {
        return imgUrl;
    }
};

/** 格式化数字->货币
 *  @param {string} 数字
 *  @param {numbeer} places 保留位数
 */
exports.formatMoney = (number, places, symbol, thousand, decimal) => {
    number = number || 0;
    places = !isNaN(places = Math.abs(places)) ? places : 2;
    symbol = symbol !== undefined ? symbol : '￥';
    thousand = thousand || ',';
    decimal = decimal || '.';
    var negative = number < 0 ? '-' : '',
        i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + '',
        j = (j = i.length) > 3 ? j % 3 : 0;
    return symbol + negative + (j ? i.substr(0, j) + thousand : '') + i.substr(j).replace(/(\d{3})(?=\d)/g, '$1' + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : '');
};

/** 格式化话题->前后加#号 */
exports.formatTopic = (topicName) => {
    if (!topicName) {
        return '';
    } else {
        return '#' + topicName + '#';
    }
};

/** 投注方案 */
exports.betPlan = (status) => {
    var statusStr = {
        '1': '待处理',
        '2': '申请成功',
        '3': '申请失败',
        '4': '投注成功',
        '5': '投注失败'
    };
    return statusStr[status];
};

/** 比赛局数 */
exports.gameFightNum = (fightNum, flag) => {
    var gameNum = '';
    if (flag) {
        gameNum = fightNum.substring(12, fightNum.length);
    } else {
        gameNum = fightNum;
    }
    if (gameNum === '0') {
        return '总场';
    } else {
        return '第' + gameNum + '局';
    }
};

/** 格式化时间
 *  @param {string} time 需要格式化的时间
 *  @param {String} fmt 格式化字符串
 */
exports.dateFmt = (time, fmt) => {
    if (!time) {
        return;
    } else {
        return utils.fmtDate(new Date(time), fmt || 'yyyy-MM-dd hh:mm');
    }
};

/** 比赛状态 */
exports.matchStatus = (status) => {
    var statusStr = {
        '0': '已报名',
        '1': '报名中',
        '2': '报名结束',
        '3': '未开始',
        '4': '比赛中',
        '5': '比赛结束',
        '6': '队伍已满',
        '7': '开赛失败',
        '8': '赛事关闭'
    };
    return statusStr[status];
};

/** 比赛时间 */
exports.matchTime = (status, item) => {
    var currentTimes = Date.parse(new Date()); // 当前时间戳
    var endTimes = item.deadline; // 报名结束时间

    var disTime = endTimes - currentTimes;
    // 计算出相差天数
    var days = Math.floor(disTime / (24 * 3600 * 1000));
    // 计算出小时数
    var leave1 = disTime % (24 * 3600 * 1000); // 计算天数后剩余的毫秒数
    var hours = Math.floor(leave1 / (3600 * 1000));
    // // 计算相差分钟数
    // var leave2 = leave1 % (3600 * 1000);        // 计算小时数后剩余的毫秒数
    // var minutes = Math.floor(leave2 / (60 * 1000));
    // // 计算相差秒数
    // var leave3 = leave2 % (60 * 1000);      // 计算分钟数后剩余的毫秒数
    // var seconds = Math.round(leave3 / 1000);

    if (item.status == 0 || item.status == 1 || item.status == 6 || currentTimes < endTimes) { // 已报名，报名中，队伍已满
        return days + '天' + hours + '小时后截止';
    } else if (item.status == 7) { // 开赛失败
        return '队伍数量不足';
    } else if (item.status == 8) { // 赛事关闭
        return '手动关闭';
    } else if (item.status == 2) { // 报名结束
        if (item.creator == true) {
            return '请确认赛程';
        } else if (currentTimes < endTimes) {
            return days + '天' + hours + '小时后公布赛程';
        }
    }
};
exports.matchMsg = (status, item) => {
    console.log(item, '<=获得赛事信息=>', status);
    var matchMsgTimes = utils.fmtDate(new Date(item.startTime), 'MM.dd hh:mm');
    if (item.status == 0) { // 已报名
        return '你已成功报名该比赛！';
    } else if (item.status == 4) { // 比赛中
        return '下一场：(' + matchMsgTimes + ')';
    } else if (item.status == 3) { // 未开始
        return '首场比赛（' + matchMsgTimes + ')';
    } else if (item.status == 5 && item.join == true) { // 比赛结束，用户参加
        if (item.ranking == -1) {
            return '首轮比赛被淘汰';
        } else if (item.ranking == 0) {
            return '获得冠军';
        } else {
            return '止步' + item.ranking;
        }
    }
};
