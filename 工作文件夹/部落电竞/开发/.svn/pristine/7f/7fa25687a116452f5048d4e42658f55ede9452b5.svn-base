<template>
  <div>
    <div class="match_item" :class="{active:getBetData.toCurBet==matchGameId+'_'+index}"
      v-for="(item,index) in quizMatchGame.quizOptions" :key="index" @click="selectItem(item,index,$event)">
      <p>{{item.name}}</p>
      <span>{{item.odds}}</span>
      <!-- 竞猜下注 -->
      <bet :ref="'childBet'+matchGameId+'_'+index" :selectItem="userSelectItem"
        v-if="getBetData.toCurBet==matchGameId+'_'+index"></bet>
    </div>
  </div>
</template>

<script>
import bet from "./bet.vue";
import { mapGetters, mapActions } from "vuex";
export default {
  components: { bet },
  props: ["quizMatchGame"],
  data() {
    return {
      matchGameId: null, //quiz_match_game表中的id
      userSelectItem: null
    };
  },
  computed: {
    ...mapGetters({
      getLoginData: "getLoginData",
      getUserData: "getUserData",
      getBetData: "getBetData"
    })
  },
  mounted() {
    console.log(this.quizMatchGame, "quizMatchGame-betItem");
    this.matchGameId = this.quizMatchGame.id;
  },

  methods: {
    ...mapActions(["setBetData", "setLoginData"]),
    selectItem(item, index, e) {
      console.log(item, "selectItem");
      if (this.checkLogin()) {
        e.stopPropagation();
        this.toCurBet = this.matchGameId + "_" + index;
        this.userSelectItem = item;
        this.userSelectItem.matchGameId = this.matchGameId;
        this.userSelectItem.matchNo = this.quizMatchGame.matchNo;
        this.userSelectItem.playThirdName = this.quizMatchGame.thirdName;
        this.setBetData({ toCurBet: this.toCurBet });
      }
    },
    //检查是否登录
    checkLogin() {
      if (this.getLoginData.loginState == true) {
        return true;
      } else {
        console.log("用户没有登录");
        this.setLoginData({
          ...this.getLoginData,
          loginShowType: true, // 控制登录弹窗
          codeType: 1
        });
        return false;
      }
    }
  }
};
</script>

<style lang='scss' scoped>
@import "../../assets/common/_mixin";

.match_item {
  float: left;
  width: 50%;
  height: 69px;
  border-width: 1px 0 0 1px;
  border-style: solid;
  border-color: #463025;
  background-color: rgba(37, 18, 20, 0.5);
  &.active {
    background: linear-gradient(135deg, #f7d064, #8a5a26);
    background: -ms-linear-gradient(135deg, #f7d064, #8a5a26);
    span {
      color: #fff;
    }
  }
  p {
    padding-top: 15px;
    font-size: 18px;
    color: #ffdcd7;
    @include t_nowrap(100%);
  }
  span {
    display: inline-block;
    padding-top: 6px;
    font-size: 14px;
    color: #6e4c47;
  }
}
</style>
