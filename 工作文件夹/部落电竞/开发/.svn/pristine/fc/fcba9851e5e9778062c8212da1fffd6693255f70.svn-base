<template>
  <div class="match_info" v-if='showFlag && matchInfo'>
    <template v-if="!toolMatchId">
      <a class='close' @click="closePop"></a>
      <h3>创建赛事信息确认</h3>
    </template>
    <div class="pop_list">
      <div class="pop_item">
        <span>选择游戏：</span>
        <p>{{matchInfo.gameName}}</p>
      </div>
      <div class="pop_item">
        <span>赛事名称：</span>
        <p>{{matchInfo.name}}</p>
      </div>
      <div class="pop_item">
        <span>参赛队伍数：</span>
        <p>{{matchInfo.teams}}</p>
      </div>
      <div class="pop_item">
        <span>每队人数：</span>
        <p>{{matchInfo.plays}}</p>
      </div>
      <div class="pop_item">
        <span>赛事模式：</span>
        <p>淘汰制</p>
      </div>
      <div class="pop_item">
        <span>报名截止时间</span>
        <p>{{matchInfo.deadline}}</p>
      </div>
      <div class="pop_item">
        <span>比赛时间</span>
        <p>{{matchInfo.startTime}}</p>
      </div>
      <div class="pop_item">
        <span>赛程轮次：</span>
        <p>{{matchInfo.rounds}}</p>
      </div>
      <div class="pop_item pop_match_round" v-for="(item,index) in matchInfo.roundTimes" :key="index">
        <span>第{{index+1}}轮</span>
        <p>{{item}}</p>
      </div>
      <div class="pop_item pop_award_tips" v-if="matchInfo.rewardDesc">
        <span>奖励说明：</span>
        <p>
          <pre>{{matchInfo.rewardDesc}}</pre>
        </p>
      </div>
    </div>
    <a class='next_btn' v-if='!toolMatchId' @click="createOrUpdateMatch()">{{matchInfo.matchId?'修改比赛':'创建比赛'}}</a>
  </div>
</template>

<script>
import navBar from "components/header/nav_bar/index.vue";
export default {
  components: {
    navBar
  },
  props: ["matchInfo"],
  data() {
    return {
      showFlag: true,
      toolMatchId: null //查看比赛详情页面
    };
  },
  mounted() {
    if (this.$route.query && this.$route.query.toolMatchId) {
      this.toolMatchId = this.$route.query.toolMatchId;
    }
    // if (this.toolMatchId) {
    //   //可以查看赛事信息
    //   this.getMatchInfoById();

    // }
  },
  methods: {
    // getMatchInfoById() {
    //   this.$post("/api/matchtool/getMatchInfo", {
    //     matchId: this.toolMatchId
    //   })
    //     .then(rsp => {
    //       console.log(rsp,'rsp123');
    //       if (rsp.code == "200") {
    //         this.matchInfo = rsp.data;
    //         this.$emit('setBgImage',rsp.data.gameImage)
    //       } else {
    //         this.$toast(rsp.message);
    //       }
    //     })
    //     .catch(error => {
    //       console.error(error);
    //     });
    // },
    createOrUpdateMatch() {
      if (this.matchInfo.matchId) {
        this.updateMatch();
      } else {
        this.createMatch();
      }
    },
    updateMatch() {
      var param = {};
      Object.keys(this.matchInfo).forEach(key => {
        param[key] = this.matchInfo[key];
      });
      this.$post("/api/matchtool/updateMatch", param)
        .then(rsp => {
          if (rsp.code == 200) {
            this.$toast("修改成功");
            setTimeout(() => {
              this.$router.push({
                path: "/matchtool/room",
                query: {
                  matchId: this.matchInfo.matchId
                }
              });
            }, 1.5 * 1000);
          } else {
            this.$toast(rsp.message, 4);
          }
        })
        .catch(error => {
          console.log(error);
        });
    },
    createMatch() {
      var param = {};
      Object.keys(this.matchInfo).forEach(key => {
        param[key] = this.matchInfo[key];
      });
      this.$post("/api/matchtool/createMatch/submit", param)
        .then(rsp => {
          if (rsp.code == 200) {
            this.$toast("创建成功");
            setTimeout(() => {
              this.$router.push({
                path: "/matchtool/room",
                query: {
                  matchId: rsp.data
                }
              });
            }, 1.5 * 1000);
          } else {
            this.$toast(rsp.message, 4);
          }
        })
        .catch(error => {
          console.error(error);
        });
    },
    closePop() {
      this.$emit("close");
    }
  }
};
</script>

<style lang='scss' scoped>
@import "../../../assets/common/_base";
@import "../../../assets/common/_mixin";

.match_info {
  position: relative;
  width: 92vw;
  margin: 28vw auto 0;
  padding-bottom: 6.9333vw;
  background-color: #fff;
  border: 1px #979797 inset;
  border-radius: 1.0667vw;
  color: #333;
  .close {
    position: absolute;
    right: 3.2vw;
    top: 3.2vw;
    width: 4.2667vw;
    height: 4.2667vw;
    @include getBgImg("../../../assets/images/matchtool/close.png");
  }
  h3 {
    line-height: 14.6667vw;
    font-size: 4.5333vw;
    text-align: center;
    @include getBorder(bottom, #e6e6e6);
  }
  .pop_list {
    min-height: 101%;
    padding-top: 2.4vw;
  }
  .pop_item {
    @extend .flex_v_justify;
    padding: 2.4vw 5.3333vw;
    font-size: 4vw;
    span {
      font-weight: 600;
    }
  }
  .pop_match_round {
    background-color: #f4f4f4;
    padding-left: 9.3333vw;
    background-color: #f4f4f4;
  }
  .pop_award_tips {
    display: block;
    padding: 0;
    span {
      display: block;
      padding: 2.4vw 5.3333vw;
    }
    p {
      padding: 2.4vw 5.3333vw 4.8vw;
      line-height: 5.6vw;
      background-color: #f4f4f4;
    }
    pre {
      white-space: pre-wrap; /* css3.0 */
      white-space: -moz-pre-wrap; /* Firefox */
      white-space: -pre-wrap; /* Opera 4-6 */
      white-space: -o-pre-wrap; /* Opera 7 */
      word-break: break-all;
      text-align: justify;
    }
  }
  .next_btn {
    display: block;
    margin: 6.9333vw 4vw 0;
    line-height: 11.7333vw;
    font-size: 4.5333vw;
    color: #fff;
    text-align: center;
    border-radius: 11.7333vw;
    @include getBgLinear(right, #ee701d, #f5951d);
  }
}
</style>
