<template>
  <div class="Page peaceElitePage">
    <!-- peaceElitePage为和平精英需要加的类名 -->
    <!-- kingGloryPage为王者荣耀的 -->
    <header class="mod_header">
      <nav-bar :pageTitle="'创建赛事'"></nav-bar>
      <div class="room_title">
        <title>小橘子创建的和平精英比赛</title>
      </div>
    </header>
    <div class="main">
      <!-- 参赛队伍 -->
      <div class="join_team">
        <h3>
          <div class="flex_hc">
            <span>参赛队伍</span>
            <span class="format">[16支队伍，淘汰赛制]</span>
          </div>
          <a class="more" @click="goUrlPage('/matchTool/moreTeam')">更多队伍<span></span></a>
        </h3>
        <!-- 参赛队伍列表 -->
        <team-list></team-list>
        <!-- 赛事信息 -->
        <div class="match_info">
          <div class="info">
            <div>
              <span>当前状态</span>
              <span>报名中</span>
            </div>
            <div>
              <span>当前队伍数</span>
              <p><span class="team_num">4</span>/16</p>
            </div>
            <div>
              <span>报名结束时间:</span>
              <span>12月18日 12:00</span>
            </div>
          </div>
          <!-- 主办方显示 -->
          <!-- <div class="manage_btn" @click="goUrlPage('/matchTool/moreTeam')">
            <a class="bg_orange">队伍管理</a>
          </div> -->
          <!-- 参赛者显示 -->
          <div class="manage_btn" @click="cancelMatch()">
            <p>已报名</p>
            <a class="bg_blue">申请退赛</a>
          </div>
        </div>
      </div>
      <!-- 赛程 -->
      <div class="team_schedule">
        <h3>
          <div class="flex_hc">
            <span>赛程</span>
          </div>
          <a class="more" @click="goUrlPage('/matchTool/moreSchedule')">更多赛程<span></span></a>
        </h3>
        <schedule-list></schedule-list>
      </div>

      <!-- 聊天室 -->
      <div class="chat_room">
        <h3>
          <div class="flex_hc">
            <span>聊天室</span>
          </div>
        </h3>
        <chat-room></chat-room>
      </div>
    </div>
    <footer class="mod_footer">
      <div class="">
        <a class="rule_btn" @click="goUrlPage('/matchTool/createMatch')">规则管理</a>
        <a class="share_btn" @click="getImage1()">分享赛事</a>
      </div>
    </footer>

    <div class="ui_pop" v-show="dialogShow">
      <div class="pop_share" v-if="shareFlag" ref="faultTree" id="my-node">
        <div>
          <p>
            <span>赛事名称：</span><span>王者荣耀</span>
          </p>
          <p>
            <span>赛事模式：</span><span>淘汰制</span>
          </p>
          <p>
            <span>赛事时间：</span><span>2019.12.14 19:00</span>
          </p>
          <p>
            <span>赛事奖励：</span><span>扫码详见更多赛事信息</span>
          </p>
        </div>
        <div class="qr_code"
          style="background-image:url(https://rs.esportzoo.com/svn/esport-res/mini/images/icon/erweima.jpg)">
        </div>
      </div>
      <div class="share_img" v-else>
        <a class='close' @click="dialogShow = false"></a>
        <img :src="imgageUrl" alt="">
      </div>
    </div>
    <pops :popTitle="popTitle" v-show="showPop" @cancel='showPop = false'></pops>
  </div>
</template>

<script>
import navBar from "components/header/nav_bar/index.vue";
import teamList from "./components/teamlist.vue";
import scheduleList from "./components/schedulelist.vue";
import chatRoom from "./components/chatroom.vue";
import pops from "./components/pops.vue";
import html2canvas from "html2canvas";
//import domtoimage from "dom-to-image";
export default {
  components: { navBar, teamList, scheduleList, chatRoom, pops },
  props: [],
  data() {
    return {
      showPop: false,
      popTitle: "",
      imgageUrl: "",
      shareFlag: true,
      dialogShow: false
    };
  },
  mounted() {},
  methods: {
    goUrlPage(url) {
      this.$router.push({
        path: url,
        query: {}
      });
    },
    cancelMatch() {
      this.showPop = true;
      this.popTitle = "您确定要退出参赛?";
    },
    getImage() {
      this.shareFlag = true;
      this.dialogShow = true;
      let self = this;
      setTimeout(() => {
        var node = document.getElementById("my-node"); // 截图区域
        console.log(node);
        var width = node.offsetWidth; //获取dom 宽度
        var height = node.offsetHeight; //获取dom 高度
        var canvas = document.createElement("canvas"); //创建一个canvas节点
        var scale = 1; //定义任意放大倍数 支持小数
        canvas.width = width * scale; //定义canvas 宽度 * 缩放
        canvas.height = height * scale; //定义canvas高度 *缩放
        canvas.getContext("2d").scale(scale, scale);
        console.log(width);
        console.log(height);
        // 设置html2canvas方法的配置
        var opts = {
          scale: scale, // 添加的scale 参数
          canvas: canvas, //自定义 canvas
          // allowTaint: true, //允许画布上有跨域图片 不建议使用 后面详细补充
          logging: true, //日志开关，便于查看html2canvas的内部执行流程
          width: width, //dom 原始宽度
          height: height,
          useCORS: true // 【重要】开启跨域配置
        };
        html2canvas(document.body, opts).then(canvas => {
          var context = canvas.getContext("2d"); // 【重要】关闭抗锯齿
          context.mozImageSmoothingEnabled = false;
          context.webkitImageSmoothingEnabled = false;
          context.msImageSmoothingEnabled = false;
          context.imageSmoothingEnabled = false;
          let dataURL = canvas.toDataURL("image/png");
          console.log(dataURL);
          self.imgageUrl = dataURL;
          self.shareFlag = false;
        });
      }, 1000);
      console.log(this.imgageUrl);
    },

    getImage1() {
      this.dialogShow = true;
      // this.shareFlag = true;
      let self = this;
      this.$nextTick(() => {
        setTimeout(() => {
          var node = document.getElementById("my-node");
          console.log(node);
          domtoimage
            .toPng(node)
            .then(function(dataUrl) {
              self.imgageUrl = dataUrl;
              self.shareFlag = false;
              console.log(self.imgageUrl, dataUrl);
            })
            .catch(function(error) {
              console.error("oops, something went wrong!", error);
            });
        }, 1000);
      });
    },
    getImage2() {
      /*截取图片*/
      this.dialogShow = true;
      this.shareFlag = true;
      this.$nextTick(() => {
        setTimeout(() => {
          this.screenshotsImg();
        }, 3000);
      });
    },
    screenshotsImg() {
      console.log("2222");

      let self = this;
      var times = 1.1;
      var _canvas = document.getElementById("my-node");
      var id = "" + new Date().getTime();
      _canvas.id = id;
      var canvas = document.createElement("canvas");
      var w = parseInt(_canvas.offsetWidth);
      var h = parseInt(_canvas.offsetHeight);
      //将canvas画布放大若干倍，然后盛放在较小的容器内，就显得不模糊了
      var dpr = window.devicePixelRatio || 2;
      console.log("kkk", window.devicePixelRatio);
      canvas.width = w * dpr;
      canvas.height = h * dpr;
      canvas.style.width = w + "px";
      canvas.style.height = h + "px";
      //可以按照自己的需求，对context的参数修改,translate指的是偏移量
      var context = canvas.getContext("2d");
      //context.translate(0,0);
      context.scale(2, 2);
      html2canvas(_canvas, {
        allowTaint: false,
        useCORS: true,
        canvas: canvas
      }).then(canvas => {
        console.log("11111");
        self.shareFlag = false;
        let dataURL = canvas.toDataURL("image/png");
        self.imgageUrl = dataURL;
      });
    }
  }
};
</script>

<style lang='scss' scoped>
@import "../../assets/common/_mixin";
@import "../../assets/common/_base";

.peaceElitePage {
  background: url("../../assets/images/matchtool/peace_elite_bg.png") center
    43.2vw no-repeat;
  background-size: 100% auto;
  .room_title {
    background: url("../../assets/images/matchtool/hpjy_header_bg.png") top
      center no-repeat;
    background-size: 100% auto;
  }
}

.kingGloryPage {
  background: url("../../assets/images/matchtool/king_glory_bg.png") center
    43.2vw no-repeat;
  background-size: 100% auto;
  .room_title {
    background: url("../../assets/images/matchtool/wzry_header_bg.png") top
      center no-repeat;
    background-size: 100% auto;
  }
}

.room_title {
  padding: 22.1333vw 13.4667vw 1.3333vw;
  title {
    display: block;
    padding: 0 12.5333vw;
    line-height: 8vw;
    font-size: 4vw;
    font-weight: 600;
    color: #fff;
    background-color: rgba(0, 0, 0, 0.6);
    border-radius: 4vw;
  }
}

h3 {
  @extend .flex_v_justify;
  padding: 2.9333vw;
  font-size: 5.3333vw;
  line-height: 5.8667vw;
  color: #fff;
  font-weight: normal;
  .format {
    padding-left: 2.4vw;
    font-size: 3.4667vw;
    color: #ff7e00;
  }
  .more {
    @extend .flex_hc;
    font-size: 3.7333vw;
    font-weight: normal;
    span {
      width: 3.2vw;
      height: 3.2vw;
      margin-left: 2.1333vw;
      @include getArrow(0.16rem, rgba(255, 255, 255, 0.3), right);
    }
  }
}

.match_info {
  @extend .flex_v_justify;
  width: 94.6667vw;
  margin: 0 2.6667vw 2.6667vw;
  padding: 2.6667vw;
  font-size: 3.7333vw;
  color: #fff;
  background-color: rgba(0, 0, 0, 0.2);
  .info {
    width: 56.8vw;
    > div {
      @extend .flex_v_justify;
      padding-bottom: 2.6667vw;
      &:last-child {
        padding-bottom: 0;
      }
    }
    .team_num {
      color: #ff7e00;
    }
  }
}

.manage_btn {
  p {
    line-height: 5.3333vw;
    padding-bottom: 1.3333vw;
    text-align: center;
  }
  a {
    @extend .flex_v_h;
    width: 23.2vw;
    height: 9.3333vw;
    font-weight: bold;
    border-radius: 6vw;
  }
  .bg_orange {
    @include getBgLinear(right, #ee701d, #f5951d);
  }
  .bg_blue {
    @include getBgLinear(right, #1a74ff, #00b4ff);
  }
}

.chat_room {
  padding-top: 1.3333vw;
}

.mod_footer {
  > div {
    @extend .flex_v_h;
    padding: 3.4667vw 0;
  }
  a {
    @extend .flex_v_h;
    width: 30.6667vw;
    height: 11.7333vw;
    margin: 0 4vw;
    font-size: 4.5333vw;
    color: #fff;
    border-radius: 11.7333vw;
  }
  .rule_btn {
    @include getBgLinear(right bottom, #6950fb, #b83af3);
  }
  .share_btn {
    @include getBgLinear(right bottom, #1a74ff, #00b4ff);
  }
}

.pop_share {
  position: relative;
  width: 100vw;
  height: 160.8vw;
  padding-top: 53.3333vw;
  @include getBgImg("../../assets/images/matchtool/share_bg.png");
  background-position: center top;
  .close {
    position: absolute;
    right: 10px;
    top: 10px;
  }
  > div {
    width: 84vw;
    margin: 0 auto;
    padding: 5.3333vw 6.6667vw;
    background-color: rgba(0, 0, 0, 0.5);
    border-radius: 1.6vw;
    p {
      padding-bottom: 2.6667vw;
      font-size: 4.2667vw;
      line-height: 4.8vw;
      color: #efd2a6;
      &:last-child {
        padding-bottom: 0;
      }
    }
  }
  .qr_code {
    width: 37.8667vw;
    height: 37.8667vw;
    margin: 6.6667vw auto 0;
    padding: 1.3333vw;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }
}

.share_img {
  @extend .g_v_c_mid;
  width: 80%;
  .close {
    position: absolute;
    top: 2.6667vw;
    right: 2.6667vw;
    width: 5.3333vw;
    height: 5.3333vw;
    @include getBgImg("../../assets/images/matchtool/close.png");
  }
  img {
    width: 100%;
  }
}
</style>
