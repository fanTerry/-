<template>
  <!-- betStyle:1是横向竞猜模式,如猜冠军,猜MVP;2是更多竞猜专用,不传则默认样式-->
  <div class="bet" :class="{'betAcross':betStyle==1,'betMore':betStyle==2}">
    <div>
      <p class="bet_title">选择竞猜金额</p>
      <div class="bet_num">
        <span :class="{'active':userBetNum == num}" v-for="(num,index) in betNumList" :key="index"
          @click="chooseBetNum(num)">{{num}}</span>
        <input placeholder="自定义" @input="handleInput($event)" maxlength="8" type="tel"
          onKeypress="return (/[\d]/.test(String.fromCharCode(event.keyCode)))" @blur="inputBlur"
          v-model.number.lazy="inputNum">
      </div>
    </div>
    <div>
      <div class="bet_forecast">
        <span>预测奖金<i
            class="num">{{(userBetNum * (selectItem&&selectItem.odds?selectItem.odds:0)).toFixed(0)}}</i></span>
        <div class="user_assets"><span class="coin"></span>{{getstarNum}}</div>
      </div>
      <a class="bet_now" @click="quizImmediately"><span>立即竞猜</span></a>
    </div>
    <div class="ui_pop" v-if="1!=1">
      <!-- 支付状态弹窗 -->
      <div class="betStatus" v-if="betStatusType == true">
        <a class="close" @click="payStatusMark=false"></a>
        <div v-if="showStatusType == 1">
          <div class="title"><span class="sad_icon"></span>余额不足</div>
          <a class="recharge_btn">星星充值</a>
        </div>
        <div v-if="showStatusType == 2">
          <div class="title"><span class="happy_icon"></span>投注成功</div>
          <p>投注结果详见竞猜记录</p>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import { mapGetters, mapActions } from "vuex";
export default {
  components: {},
  props: ["betStyle", "selectItem"],
  data() {
    return {
      betStatusType: false,
      showStatusType: 0,
      walletRec: null,
      userBetNum: 0,
      betNumList: [2000, 5000, 10000],
      inputNum: null,
      isSubmit: false //防止重复提交
    };
  },
  computed: {
    ...mapGetters({
      loginInfo: "getLoginPop",
      wxuserStarNum: "getstarNum"
    }),
    getstarNum() {
      return this.wxuserStarNum.state;
    }
  },
  //实时监听用户星星状态
  watch: {
    getstarNum(walletRec) {
      this.walletRec = walletRec;
      console.log(walletRec, "I用户星星");
    }
  },
  mounted() {
    this.chooseBetNum(this.betNumList[0]);
  },
  methods: {
    quizImmediately() {
      if (this.checkLogin()) {
        if (!this.checkBalance()) {
          return;
        }
        //比赛日期+赛事编号+“*”+玩法+“|”+竟猜选项+“@”+赔率;
        let quizData = {
          matchNo: "2016022652003", //比赛日期+赛事编号
          playName: "MNL", //玩法
          optIndex: 1, //竞猜选项
          betSp: "this.odds", //赔率
          userBetNum: this.userBetNum //用户投注数量
        };
        this.doSubmit(quizData);
      }
    },
    //提交竞猜
    doSubmit(quizData) {
      this.isSubmit = true;
      this.$toast("正在提交中，请稍等");
      this.$post("/api/quiz/bet/doSubmit", quizData)
        .then(data => {
          if (data.code == 200) {
            //投注成功处理
            this.betSuccess(data);
            //刷新余额
            this.userDataSer.getBalance();
          } else {
            //投注失败处理
            this.betFail(data);
          }
          this.isSubmit = false;
        })
        .catch(error => {
          this.isSubmit = false;
          console.log(error, "提交竞猜投注失败");
        });
    },
    betSuccess(data) {},
    betFail(data) {},
    //检查账户余额
    checkBalance() {
      if (this.userBetNum > this.getstarNum) {
        //后续需弹充值弹窗在这里处理TODO
        this.$toast("余额不足情况待处理", 3);
        return false;
      }
      return true;
    },
    //检查是否登录
    checkLogin() {
      if (this.loginInfo.state == true) {
        return true;
      } else {
        console.log("用户没有登录");
        this.$store.dispatch("setLoginShowType", { state: true });
        this.$store.dispatch("setCodeType", { state: 1 });
        return false;
      }
    },
    //选择投注金额
    chooseBetNum(num) {
      this.userBetNum = num;
    },
    //处理用户输入
    handleInput(e) {
      this.inputNum = e.target.value;
      console.log(this.inputNum);
      if (this.inputNum > this.getstarNum) {
        this.$toast("您的星星余额不足", 3);
        this.inputNum = null;
        return;
      }
    },
    inputBlur() {
      if (this.inputNum % 1000 != 0) {
        this.$toast("请输入1000的倍数", 3);
        this.inputNum = null;
        return;
      }
    }
  }
};
</script>

<style lang='scss' scoped>
@import "../../assets/common/_icon";

.bet {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1;
  width: 100%;
  padding: 15px 12px;
  font-size: 14px;
  color: #6e4c47;
  background: #201217;
  border: 1px solid #5e3b23;
  .bet_title {
    text-align: left;
  }
  .bet_num {
    @extend .flex_hc;
    margin: 15px auto;
    border: 1px solid #5e3b23;
    span,
    input {
      width: 78px;
      height: 46px;
      line-height: 46px;
      border-right: 1px solid #5e3b23;
      color: #fedcd7;
      text-align: center;
      &.active {
        background: linear-gradient(135deg, #f7d064, #8a5a26);
        background: -ms-linear-gradient(135deg, #f7d064, #8a5a26);
      }
    }
    input {
      border: none;
      &::-webkit-input-placeholder {
        color: #fedcd7;
      }
    }
  }
  .num {
    padding-left: 10px;
  }
  .bet_forecast {
    @extend .flex_v_justify;
  }
  .user_assets {
    @extend .flex_hc;
    margin-left: 25px;
    color: #f3d40c;
    font-weight: bold;
    .coin {
      width: 20px;
      height: 20px;
      margin-right: 8px;
    }
  }
  .bet_now {
    display: block;
    width: 100%;
    height: 48px;
    margin-top: 15px;
    font-size: 18px;
    line-height: 48px;
    text-align: center;
    @include getBgImg("../../assets/images/home/guess_now.png");
    span {
      font-weight: bold;
      -webkit-text-stroke: 1px undefined;
      text-stroke: 1px undefined;
      background: linear-gradient(
        0deg,
        rgba(255, 220, 215, 1) 0.2685546875%,
        rgba(255, 242, 240, 1) 100%
      );
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
    }
  }
}

.betAcross {
  &,
  > div {
    @extend .flex_hc;
  }
  .bet_num {
    margin-left: 20px;
  }
  .bet_forecast {
    margin-left: 65px;
  }
  .bet_now {
    width: 240px;
    margin-top: 0;
    margin-left: 50px;
  }
}

.betMore {
  @extend .flex_v_justify;
  .bet_forecast {
    justify-content: flex-end;
    -webkit-justify-content: flex-end;
    -ms-justify-content: flex-end;
  }
  .bet_now {
    width: 250px;
  }
  .bet_num {
    margin-top: 20px;
    margin-bottom: 0;
    span {
      width: 51px;
    }
    input {
      width: 92px;
    }
  }
}

.betStatus {
  @extend .flex_v_h;
  width: 415px;
  height: 230px;
  color: #fff;
  background: linear-gradient(-16deg, rgba(42, 24, 28, 1), rgba(52, 32, 29, 1));
  background: -webkit-linear-gradient(
    -16deg,
    rgba(42, 24, 28, 1),
    rgba(52, 32, 29, 1)
  );
  background: -ms-linear-gradient(
    -16deg,
    rgba(42, 24, 28, 1),
    rgba(52, 32, 29, 1)
  );
  box-shadow: 0px 0px 15px 0px rgba(10, 2, 4, 0.5);
  .title {
    @extend .flex_hc;
    font-size: 20px;
  }
  p {
    padding-top: 30px;
    font-size: 14px;
  }
  span {
    width: 45px;
    height: 45px;
    margin-right: 15px;
  }
  .recharge_btn {
    @extend .flex_v_h;
    margin: 20px auto 0;
    width: 158px;
    height: 38px;
    color: #f5b457;
    border: 3px solid #f5b457;
  }
}

.close {
  position: absolute;
  right: 0;
  top: 0;
  transform: translate(25%, -25%);
  -webkit-transform: translate(25%, -25%);
  width: 40px;
  height: 40px;
}
</style>
