<template>
  <div class="Page">
    <header class="mod_header header_nav_list">
      <!-- <userHeader :num="isIf"></userHeader>
      <navList></navList>-->
    </header>
    <div class="main" id='mainId'>
      <template v-if="!isLoading">
        <scroll ref="scroll" :scrollbar="scrollbar" :pullDownRefresh="pullDownRefresh" :pullUpLoad="pullUpLoad"
          :startY="0" @pullingDown="onPullingDown" @pullingUp="onPullingUp">
          <section class="list_content" v-for="(item ,index) in dataList" :key="index" id='scrollId'>
            <h2>
              {{new Date(item.sortDate).toDateString() ==new Date().toDateString()?"今天":item.sortMatchDate}}
            </h2>
            <div class="list">
              <div class="title">
                <div>
                  <img
                    src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1562671724161&di=e1f0a7a5c8ecb42e4f9007eda15e2b91&imgtype=0&src=http%3A%2F%2Fimg.zcool.cn%2Fcommunity%2F031096455ea5aca000001cbb0ee8e30.jpg"
                    alt v-if="item.gameType==1" />
                  <img
                    src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1562671781275&di=2b41fd4370a413a504b28101c8704de5&imgtype=0&src=http%3A%2F%2Fp2.so.qhmsg.com%2Ft013599c658b4887137.png"
                    alt v-if="item.gameType==4" /> {{item.legueName}}
                </div>
                <!-- <span>小组赛</span> -->
              </div>
              <div class="item" :class="{'active':match.status == 1}" v-for="(match ,index) in item.matchResultList"
                :key="index">
                <div class="left" @click="toMatchDetail(match.matchId)">
                  <div class="team_pk">
                    <div class="team">
                      <img :src="match.homeTeamLogo" alt />
                      <span class="name">{{match.homeTeamName}}</span>
                      <span class="score" v-if="match.status">{{match.status==0?"-":match.homeScore}}</span>
                      <div class="outcome" v-if="match.status == 2">
                        <span :class="{'active':outcome == 1}" v-for="outcome in match.gamesResultList"></span>
                      </div>
                    </div>
                    <div class="team">
                      <img :src="match.awayTeamLogo" alt />
                      <span class="name">{{match.awayTeamName}}</span>
                      <span class="score" v-if="match.status">{{match.status==0?"-":match.awayScore}}</span>
                      <div class="outcome" v-if="match.status == 2">
                        <span :class="{'active':outcome == 0}" v-for="outcome in match.gamesResultList"></span>
                      </div>
                    </div>

                  </div>
                  <div class="flex_hc" v-if="!match.status">
                    <p class="round">BO{{match.numberOfGames}}</p>
                    <p class="time">{{match.formatBeginDate}}</p>
                  </div>
                </div>
                <div class="right">
                  <!-- <div class="red_bag"></div> -->
                  <!-- 设置提醒 -->
                  <template v-if="match.status==0 && userInfo">
                    <i class="iconfont icon-naozhong" @click="updateFollow(match,1)" v-if="match.followType==0"></i>
                    <i class="iconfont icon-naozhong-act" @click="updateFollow(match,0)" v-if="match.followType==1"></i>
                  </template>
                  <!-- 图文直播 -->
                  <div class="live" v-if="match.status==1">
                    <p>LIVE</p>
                  </div>
                  <!-- 集锦，回放 -->
                  <div class="replay" v-if="match.status==2">
                    <!-- <i class="iconfont icon-bofang"></i>集锦,回放 -->
                    已结束
                  </div>
                </div>
              </div>
            </div>
          </section>
        </scroll>
      </template>
      <loading v-if="isLoading"> </loading>
    </div>
    <footer class="mod_footer">
      <tabbar></tabbar>
    </footer>

    <!-- 点击加上active -->
    <a class="refresh_btn" :class="reflushFlag?'active':''" @click="onClickRefresh"></a>
  </div>
</template>

<script>
import tabbar from "../../components/tabbar/index";
import navList from "../../components/header/nav_list/index";
import userHeader from "../../components/header/user_header/index";
import Scroll from "components/common/scroll";
import loading from "components/common/loading";
import { mapMutations } from "vuex";
import fixScroll from "../../libs/common/fix-scroll-ios";

export default {
  data() {
    return {
      scrollbar: { fade: true },
      pullDownRefresh: { threshold: 90, stop: 40, txt: "刷新成功" },
      pullUpLoad: {
        threshold: 10,
        txt: { more: "加载更多", noMore: "没有更多数据了" }
      },
      index: 1,
      turnToPrev: false,
      turnToNext: false,

      isLoading: true,
      isIf: false,
      showType: 1,
      pageNo: 1,
      pageSize: 10,
      dataList: [],
      gamesList: [], //游戏列表
      statusList: [],
      gameType: 1, //游戏类型
      staustType: 3, //默认选赛程
      reportType: 1, //列表展示样式
      loadType: 2, //拼接数据类型，下拉加载 0，上拉加载1,初始化加载 2 当天
      loadDayRange: 7, //加载数据步长，天单位
      pullPageNo: 0, //记录下拉刷新页码
      bottomPageNo: 0, //记录上啦刷新页码
      noDataFlag: false,

      preventRepeatReuqest: false, //到达底部加载数据，防止重复加载
      showBackStatus: false, //显示返回顶部按钮
      showLoading: true, //显示加载动画
      touchend: false, //没有更多数据
      reflushFlag: false,
      userInfo: null
    };
  },

  mounted() {
    if (this.$store.state.user.userInfo) {
      this.userInfo = this.$store.state.user.userInfo;
    }
    this.getPageData();
    //  this.CHOOSE_SEARCH_ADDRESS(item);
    fixScroll.tofix();
  },
  methods: {
    /**测试用 */
    // ...mapMutations([
    //   "RECORD_ADDRESS",
    //   "CHOOSE_SEARCH_ADDRESS",
    // ]),
    updateFollow(match, status) {
      let param = {};
      param.matchId = match.id;
      param.status = status;
      param.userId = this.userInfo.userId;
      return this.$post("/api/league/userfollow", param)
        .then(rsp => {
          const dataResponse = rsp;
          this.isLoading = false;
          console.log("关注赛事", dataResponse);
          if (dataResponse.code == "200") {
            if (status == 1) {
              this.$toast("关注成功");
            } else {
              this.$toast("取消关注");
            }
            match.followType = status;
          }
        })
        .catch(error => {
          const { status } = error.response;
          if (status === 401) {
            this.$toast("未登录，无法关注");
          }
          console.log(error);
        });
    },
    /**获取分页赛事数据 */
    getPageData(param) {
      if (!param) {
        this.dataList = [];
        param = {};
        param.videogameId = 1; //游戏类型
        param.status = 3;
        param.loadType = 2;
        param.loadDayRange = 2;
        param.pullPageNo = 0;
        param.bottomPageNo = 1;
        this.bottomPageNo = param.bottomPageNo;
      }
      if (this.userInfo) {
        param.userId = this.userInfo.userId;
      }
      console.log("赛事分页参数---", param);
      return this.$post("/api/league/leagueIndexdata", param)
        .then(rsp => {
          const dataResponse = rsp;
          this.isLoading = false;
          console.log("赛事数据", dataResponse);
          if (dataResponse.code == "200") {
            if (param.loadType == 0) {
              this.dataList = dataResponse.data.matchResultList.concat(
                this.dataList
              );
            } else {
              this.dataList = this.dataList.concat(
                dataResponse.data.matchResultList
              );
            }
            return dataResponse.data.matchResultList;
          }
        })
        .catch(error => {
          console.log(error);
        });
    },

    onPullingDown() {
      console.log("you are onPullingDown");
      if (this._isDestroyed) {
        return;
      }
      this.refresh(true);
    },
    onPullingUp() {
      console.log("you are onPullingUp");
      if (this._isDestroyed) {
        return;
      }

      if (this.currPageSize < this.pageSize) {
        console.log("currPageSize", this.currPageSize);
        this.$refs.scroll.forceUpdate();
      } else {
        this.loadMore();
      }
    },

    /**下拉刷新 */
    refresh(loaded) {
      console.log("you are refresh");
      let param = {};
      param.videogameId = this.gameType; //游戏类型
      param.status = this.staustType;
      param.loadType = 0;
      param.loadDayRange = 7;
      this.pullPageNo += 1;
      param.pullPageNo = this.pullPageNo;
      param.bottomPageNo = this.bottomPageNo;
      this.getPageData(param).then(() => {
        this.$refs.scroll.forceUpdate();
      });
    },

    /** 上拉加载*/
    loadMore() {
      console.log("you are loadMore");
      let param = {};
      param.videogameId = this.gameType; //游戏类型
      param.status = this.staustType;
      param.loadType = 1;
      param.loadDayRange = 7;
      param.pullPageNo = this.pullPageNo;
      this.bottomPageNo += 1;
      param.bottomPageNo = this.bottomPageNo;
      this.getPageData(param).then(data => {
        this.currPageSize = data.length;
        this.$refs.scroll.forceUpdate();
      });
    },
    toMatchDetail(matchId) {
      this.$router.push({
        name: "matchDetail",
        params: {
          matchId: matchId
        }
      });
    },
    onClickRefresh: function() {
      var _self = this;
      let param = {};
      (_self.loadType = 2), //拼接数据类型，下拉加载 0，上拉加载1,初始化加载 2 当天
        (_self.pullPageNo = 0), //记录下拉刷新页码
        (_self.dataList = []);
      _self.matchResultList = [];
      _self.isLoading = true;
      _self.reflushFlag = true;
      setTimeout(function() {
        _self.getPageData().then(() => {
          _self.$refs.scroll.forceUpdate();
        });
      }, 1 * 500);
    }
  },

  components: {
    tabbar,
    userHeader,
    navList,
    Scroll,
    loading
  }
};
</script>

<style lang='scss' scoped>
@import "../../assets/common/_base.scss";
@import "../../assets/common/_mixin.scss";
@import "../../assets/common/_var.scss";
@import "../../assets/common/iconfont.css";

.list_content {
  margin-top: 8px;
  background-color: #fff;
  h2 {
    padding: 12px 0;
    font-size: 14px;
    color: #999;
    text-align: center;
    font-weight: normal;
  }
  .title {
    @extend .flex_v_justify;
    padding: 12px 15px 16px 12px;
    color: #666;
    > div {
      @extend .flex_hc;
      font-size: 14px;
    }
    img {
      width: 20px;
      height: 20px;
      margin-right: 4px;
      border-radius: 50%;
      object-fit: cover;
    }
  }
  .item {
    @extend .flex_v_justify;
    height: 70px;
    padding: 0 12px;
    &.active {
      background-color: #ff7e00;
      .name,
      .score {
        color: #fff !important;
      }
    }
  }
  .left,
  .right {
    @extend .flex_hc;
  }
  .time,
  .round {
    font-size: 14px;
    color: #999;
  }
  .round {
    padding-right: 20px;
  }
  .team_pk {
    .team {
      @extend .flex_hc;
      padding-bottom: 8px;
      &:last-child {
        padding: 0;
        .name,
        .score {
          color: #999;
        }
      }
    }
    img {
      width: 20px;
      height: 20px;
      margin-right: 10px;
      border-radius: 50%;
      object-fit: contain;
    }
    .name {
      width: 54px;
      margin-right: 38px;
      font-size: 14px;
      color: #000;
      @include t_nowrap(54px);
      line-height: 1.2;
    }
    .score {
      font-size: 14px;
    }
    .outcome {
      @extend .flex_hc;
      padding-left: 28px;
      span {
        width: 4px;
        height: 4px;
        margin-right: 4px;
        border-radius: 50%;
        background-color: #ddd;
        &.active {
          background-color: #ff4e4f;
        }
      }
    }
  }
  .red_bag {
    width: 19px;
    height: 23px;
    @include getBgImg("../../assets/images/match/red_bag.png");
  }
  .icon-naozhong,
  .icon-naozhong-act {
    font-size: 20px;
    margin-left: 30px;
    margin-right: 20px;
  }
  .icon-naozhong-act {
    color: $color_main;
  }
  .live {
    color: #fff;
    padding-right: 30px;
    .iconfont {
      font-size: 12px;
      margin-right: 2px;
    }
    p {
      font-size: 14px;
      line-height: 20px;
    }
    p:last-child {
      text-indent: 14px;
    }
  }
  .replay {
    padding-right: 24px;
    font-size: 14px;
    color: #999;
    .icon-bofang {
      font-size: 12px;
      margin-right: 2px;
      color: currentColor;
    }
  }
}

.refresh_btn {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  @include getBgImg("../../assets/images/match/refresh_btn.png");

  position: fixed;
  z-index: 10;
  right: 20px;
  bottom: 90px;
}

.refresh_btn.active {
  animation: rotate 0.5s;
}

@keyframes rotate {
  form {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}

@-webkit-keyframes rotate {
  form {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
</style>
