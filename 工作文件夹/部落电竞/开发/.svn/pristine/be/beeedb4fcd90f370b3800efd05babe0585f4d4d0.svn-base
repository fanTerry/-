package com.esportzoo.esport.manager;

import com.alibaba.fastjson.JSONObject;
import com.esportzoo.common.appmodel.domain.result.ModelResult;
import com.esportzoo.esport.client.service.cms.CmsContentServiceClient;
import com.esportzoo.esport.client.service.common.ClientAdPicServiceClient;
import com.esportzoo.esport.client.service.consumer.UserConsumerServiceClient;
import com.esportzoo.esport.connect.request.IndexRequest;
import com.esportzoo.esport.connect.response.ChannelResponse;
import com.esportzoo.esport.connect.response.CommonResponse;
import com.esportzoo.esport.constants.*;
import com.esportzoo.esport.domain.ClientAdPic;
import com.esportzoo.esport.domain.SysConfigProperty;
import com.google.common.collect.Lists;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Component
public class IndexManager {

	private transient static final Logger logger = LoggerFactory.getLogger(IndexManager.class);

	@Autowired
	@Qualifier("clientAdPicServiceClient")
	ClientAdPicServiceClient clientAdPicServiceClient;

	@Autowired
	@Qualifier("cmsContentServiceClient")
	CmsContentServiceClient cmsContentServiceClient;

	@Autowired
	@Qualifier("userConsumerServiceClient")
	UserConsumerServiceClient userConsumerServiceClient;

	@Autowired
	CmsContentManager cmsContentManager;

	@Autowired
	private CommonManager commonManager;


	public CommonResponse<JSONObject> getIndexData( IndexRequest indexRequest){
		JSONObject jsonObject = new JSONObject();
		jsonObject.put("canShowVideo",false);
		try {
			/** 加载首页轮播图及首页中间广告位 */
			//获取多个广告定位的广告列表
			List<Integer> typeList = new ArrayList<>();
			typeList.add(AdPicPlaceType.HOMEPAGE_BANNER.getIndex());
			typeList.add(AdPicPlaceType.HOMEPAGE_ADVERTISE.getIndex());
			ModelResult<List<ClientAdPic>> listAdResult = clientAdPicServiceClient.queryListByAdTypeList(typeList);
			if (indexRequest.getClientType()==null){
				indexRequest.setClientType(ClientType.WXXCY.getIndex());
			}
			List<ClientAdPic> clientAdPicList = listAdResult.getModel();
			clientAdPicList= clientAdPicList.stream().filter(x -> x.getClientType().equals(indexRequest.getClientType()))
					.collect(Collectors.toList());
			List<ClientAdPic> bannerList = clientAdPicList.stream().filter(ad -> ad.getPosition().equals(AdPicPlaceType.HOMEPAGE_BANNER.getIndex())).collect(Collectors.toList());
			List<ClientAdPic> advertiseList = clientAdPicList.stream().filter(ad -> ad.getPosition().equals(AdPicPlaceType.HOMEPAGE_ADVERTISE.getIndex())).collect(Collectors.toList());

			jsonObject.put("adList", bannerList);
			jsonObject.put("centerAdList", advertiseList);


			/** 加载首页栏目 */
			SysConfigProperty property = commonManager.getSysConfigByKey(SysConfigPropertyKey.INDEXPAGE_CHANNEL_CONFIG,indexRequest.getClientType());
			if (property==null || StringUtils.isEmpty(property.getValue())){
				logger.error("没有配置首页栏目");
				return CommonResponse.withSuccessResp(jsonObject);
			}
			String[] strings = property.getValue().split(";");
			List<ChannelResponse> channelResponseList = Lists.newArrayList();
			for (String index : strings) {
				CmsChannel cmsChannel = CmsChannel.valueOf(Integer.parseInt(index));
				if (cmsChannel==null){
					logger.warn("没有找到对应栏目ID，ID={}",index);
					continue;
				}

				if (index.equals(CmsChannel.Pure_Video_.getIndex()+"")){
					jsonObject.put("canShowVideo",true);
				}
				ChannelResponse channelResponse = new ChannelResponse();
				channelResponse.setChannelNo(cmsChannel.getChanneId());
				channelResponse.setContentType(cmsChannel.getIndex());
				channelResponse.setName(cmsChannel.getDescription());
				channelResponseList.add(channelResponse);
			}

			jsonObject.put("channelList", channelResponseList);

			jsonObject.put("showType", PageHeadShowType.index_head.getIndex());

		} catch (Exception e) {
			logger.error("获取首页数据出错,出错信息:{}",e);
			e.printStackTrace();
			return CommonResponse.withErrorResp("系统出错");
		}

		return CommonResponse.withSuccessResp(jsonObject);
	}

}
