<template>
  <div class="ui_pop" v-if="showLoginType">
    <!-- 微信登录 -->
    <div class="login" v-if="codeType==1">
      <p class="login_title">登录微信</p>
      <img class="login_img" src="../../../assets/images/pop/red_bag.png" alt />
      <p class="login_att">领取星星，参与竞猜</p>
      <p class="login_tips">稀有皮肤、话费、Q币海量奖品等你拿</p>
      <a class="login_btn" @click="wxCodeLogin">立即登录</a>
    </div>

    <!-- 二维码扫一扫 -->
    <div class="qrCode" v-if="codeType==2">
      <a class="close" @click="loginClosePop"></a>
      <img class="qrCode_img" v-bind:src="qrcodeUrl" alt />
      <p class="qrCode_tips">
        微信
        <span>扫一扫</span>关注
        <br />橘子电竞快速登陆
      </p>
    </div>
  </div>
</template>

<script>
import Vue from "vue";
import localStorage from "../../../libs/storages/localStorage";
import cookie from "../../../libs/common/cookie";
import { mapGetters, mapActions } from "vuex";
export default {
  components: {},
  props: [],
  data() {
    return {
      userInfo: null,
      sceneStr: null,
      qrcodeUrl: null,
      websock: null,
      wx_account_login_cookie_sid: null,
      codeType: 0,
      showLoginType: false
    };
  },
  computed: {
    ...mapGetters({
      loginInfo: "getLoginPop",
      userLoginType: "getLoginType",
      userLoginShowType: "getLoginShowType",
      userCodeType: "getCodeType",
      wxuserInfo: "getUserInfo",
      wxuserStarNum: "getstarNum"
    }),
    getLoginShowType() {
      return this.userLoginShowType.state;
    },
    getCodeType() {
      return this.userCodeType.state;
    }
  },
  // 实时监听用户登录状态
  watch: {
    getLoginShowType(val) {
      this.showLoginType = val;
      console.log(val, "P用户登录状态");
    },
    getCodeType(val) {
      this.codeType = val;
      console.log(val, "p用户登录二维码状态");
    }
  },
  methods: {
    //用户登录
    wxCodeLogin() {
      return this.$post("/api/wxlogin/scanLogin")
        .then(rsp => {
          const dataResponse = rsp;
          this.qrcodeUrl = dataResponse.qrcodeUrl;
          this.sceneStr = dataResponse.sceneStr;
          this.initWebSocket();
        })
        .catch(error => {
          console.log(error);
        });
    },

    initWebSocket() {
      if ("WebSocket" in window) {
        const wsuri = "ws://www.esportzoo.cn/websocket"; //ws地址
        this.websock = new WebSocket(wsuri);
        this.websock.onopen = this.websocketonopen;
        this.websock.onerror = this.websocketonerror;
        this.websock.onmessage = this.websocketonmessage;
        this.websock.onclose = this.websocketclose;
      } else {
        alert("当前浏览器无法获取二维码，请更换浏览器");
      }
    },
    websocketonopen() {
      console.log("WebSocket连接成功");
      // console.log(this.sceneStr);
      this.websock.send(this.sceneStr);
      // this.codeType = 2;
      // this.showLoginType = true;
      this.$store.dispatch("setLoginShowType", { state: true });
      this.$store.dispatch("setCodeType", { state: 2 });
    },
    websocketonerror(e) {
      //错误
      console.log("WebSocket连接发生错误");
      this.initWebSocket();
    },
    websocketonmessage(e) {
      // console.log("数据开始接收");
      // console.log(e.data); // 接收数据
      this.userInfo = JSON.parse(e.data);
      this.wx_account_login_cookie_sid = this.userInfo.sId;
      cookie.setCookie(
        "wx_account_login_cookie_sid",
        this.wx_account_login_cookie_sid,
        1
      );
      localStorage.set("user", this.userInfo);
      //用户成功登录后改登录标志位true
      this.$store.dispatch("setLoginPop", { state: true });
      this.$store.dispatch("setLoginType", { state: 0 });

      this.$store.dispatch("setUserInfo", { state: this.userInfo });
      this.$store.dispatch("setstarNum", { state: this.userInfo.walletRec });
      // this.codeType = 0;
      // this.showLoginType = false;
      this.$store.dispatch("setLoginShowType", { state: false });
      this.$store.dispatch("setCodeType", { state: 0 });
      this.$parent.queryYeYunPoints();
      this.$parent.creditsExchangeShow();
      this.$parent.checkUserSignStatus();
      console.log("成功调用椰云");
    },

    websocketclose(e) {
      console.log("WebSocket连接关闭", e); //关闭
    },
    //关闭弹窗
    loginClosePop() {
      // this.codeType = 0;
      // this.showLoginType = false;
      this.$store.dispatch("setLoginShowType", { state: false });
      this.$store.dispatch("setCodeType", { state: 0 });
    },

    //跳转到扫码登录
    // codeLogin() {
    //   this.wxCodeLogin();
    // },
    //
    loginOpenPop() {
      console.log("调用方法");
      this.codeType = 1;
      this.showLoginType = true;
    }
  }
};
</script>

<style lang='scss' scoped>
@import "../../../assets/common/_base";
@import "../../../assets/common/_mixin";

.ui_pop > div {
  position: relative;
}

.close {
  position: absolute;
  right: 0;
  top: 0;
  transform: translate(25%, -25%);
  -webkit-transform: translate(25%, -25%);
  width: 40px;
  height: 40px;
}

.login {
  width: 403px;
  height: 536px;
  text-align: center;
  @include getBgImg("../../../assets/images/pop/login_wx_bg.png");
}

.login_title {
  padding-top: 72px;
  font-size: 24px;
  color: #ffdcd7;
}

.login_img {
  width: 153px;
  margin-top: 35px;
}

.login_att {
  padding-top: 35px;
  font-size: 24px;
  color: #ffdcd7;
}

.login_tips {
  padding-top: 19px;
  font-size: 14px;
  color: #ffbea3;
}

.login_btn {
  display: inline-block;
  width: 318px;
  height: 48px;
  margin-top: 26px;
  line-height: 48px;
  font-size: 16px;
  color: #ffdcd7;
  @include getBgImg("../../../assets/images/home/guess_now.png");
}

.qrCode {
  width: 714px;
  height: 387px;
  @include getBgImg("../../../assets/images/pop/qrCode_bg.png");
  .close {
    right: 18px;
    top: 23px;
  }
}

.qrCode_img {
  @extend .g_v_mid;
  left: 72px;
  width: 270px;
  height: 270px;
}

.qrCode_tips {
  @extend .g_v_mid;
  right: 80px;
  font-size: 30px;
  line-height: 50px;
  color: #fff;
  text-align: center;
  span {
    color: #27c5d3;
  }
}

.confirm_pay,
.orderDetails,
.recharge,
.prize,
.qrCodePay,
.payStatus {
  background: linear-gradient(-16deg, rgba(42, 24, 28, 1), rgba(52, 32, 29, 1));
  background: -webkit-linear-gradient(
    -16deg,
    rgba(42, 24, 28, 1),
    rgba(52, 32, 29, 1)
  );
  background: -ms-linear-gradient(
    -16deg,
    rgba(42, 24, 28, 1),
    rgba(52, 32, 29, 1)
  );
  box-shadow: 0px 0px 15px 0px rgba(10, 2, 4, 0.5);
}

</style>
