<template>
  <div class="Page">
    <header class="mod_header">
      <navBar :type="'1'"></navBar>
    </header>

    <div class="main">
      <div class="user_num">
        <input type="text" placeholder="请输入手机号" v-model="account" @blur='scrollToTop' />
      </div>
      <div class="user_pwd">
        <input type="password" placeholder="请输入密码" v-model="password" @blur='scrollToTop' />
        <router-link to="/resetPassword">忘记密码</router-link>
      </div>
      <!-- disabled置灰态 -->
      <a class="login_btn" @click="login">登录</a>
      <p class="tar">
        <router-link to="/register">
          <a class="register_link">注册账号</a>
        </router-link>
      </p>
      <div class="agreement">
        <span class="select" :class="{active:selected}" @click="selected = !selected"></span>
        <p>同意橘子电竞<a @click="goUrlPage('/login/agreement')">用户协议>></a>和<a @click="goUrlPage('/login/pravicy')">隐私政策>></a>
        </p>
      </div>
    </div>

    <!-- <footer class="mod_footer">
      <div class="third_party">
        <p>第三方账户登陆</p>
        <ul>
          <li class="wx"></li>
          <li class="qq"></li>
          <li class="wb"></li>
        </ul>
      </div>
    </footer> -->
  </div>
</template>

<script>
import navBar from "../../../components/header/nav_bar/index";
import jsencrypt from "../../../libs/jsencrypt-rsa.js";

export default {
  data() {
    return {
      account: "",
      password: "",
      selected: true
    };
  },
  methods: {
    login() {
      var _self = this;
      if (this.account == "") {
        this.$toast("请输入账号");
        return;
      }
      if (this.password == "") {
        this.$toast("请输入密码");
        return;
      }
      let encryPassword = jsencrypt.encryptPwd(this.password);
      console.log(encryPassword, "encryPassword");
      let param = {
        accountOrPhone: this.account,
        password: encryPassword,
        biz: this.baseParamConfig.biz
      };
      if (!this.selected) {
        this.$toast("请先同意用户协议");
        return;
      }
      this.$post("/api/phonelogin/", param)
        .then(dataResponse => {
          if (dataResponse.code != "200") {
            this.$toast(dataResponse.message);
            return;
          }
          var member = dataResponse.data;
          if (/^1(3|4|5|6|7|8|9)\d{9}$/.test(member.nickName)) {
            member.nickName = member.nickName.substring(0, 7) + "XXXX";
          }
          let user = {
            nickName: member.nickName,
            icon: member.icon ? member.icon : _self.globalConst.userDefaultIcon,
            userId: member.id,
            phone: member.phone
          };
          //window.sessionStorage.user = JSON.stringify(user);
          window.localStorage.setItem("user", JSON.stringify(user));
          window.localStorage.user = JSON.stringify(user);
          _self.$store.dispatch("setUserInfo", user);

          let redirect = decodeURIComponent(_self.$route.query.redirect || "/");
          console.log(redirect, "redirect");
          _self.$router.push({
            path: redirect
          });
        })
        .catch(error => {
          this.$toast("登录失败");
          console.log(error);
        });
    },
    goUrlPage(path) {
      this.$router.push({
        path: path,
        query: {}
      });
    },
    scrollToTop: function() {
      setTimeout(function() {
        window.scrollTo(0, 200);
        console.log("回滚");
      }, 100);
    }
  },
  components: {
    navBar
  }
};
</script>

<style lang='scss' scoped>
@import "../../../assets/common/_mixin";
@import "../../../assets/common/_base";
@import "../../../assets/common/_var";

.Page {
  @include getBgImg("../../../assets/images/user_center/login_logo.png");
  background-size: 50%;
  background-position: top center;
  background-color: #fff;
}

.mod_header {
  h2 {
    position: relative;
    height: 40px;
    background: none;
  }
}

.main {
  position: relative;
  padding-top: 68vw;
  padding-bottom: 5.3333vw;
  .user_num,
  .user_pwd {
    @extend .flex_v_justify;
    margin: 0 20px;
    @include getBorder(bottom, #e7e7e7);
    input {
      flex: 1;
      height: 57px;
      font-size: 15px;
      border: none;
    }
    a {
      font-size: 14px;
      color: #a1a1a1;
    }
  }
  .login_btn {
    display: block;
    margin: 20px 20px 25px;
    padding: 15px;
    font-size: 18px;
    color: #fff;
    border-radius: 8px;
    text-align: center;
    background-color: $color_main;
    &.disabled {
      opacity: 0.5;
    }
  }
  .register_link {
    padding-right: 20px;
    font-size: 16px;
    color: $color_main;
  }
}

.agreement {
  @extend .flex_v_h;
  margin-top: 50px;
  width: 100%;
  color: #a1a1a1;
  .select {
    @extend .flex_v_h;
    width: 14px;
    height: 14px;
    margin-right: 5px;
    border: 1px solid currentColor;
    &.active {
      &::before {
        content: "";
        width: 7px;
        height: 3px;
        border-left: 2px solid #fea21b;
        border-bottom: 2px solid #fea21b;
        transform: rotate(-47deg) translate(1px, -1px);
        -webkit-transform: rotate(-47deg) translate(1px, -1px);
      }
    }
  }
  a {
    padding: 0 4px;
    color: #fea21b;
  }
}

.third_party {
  p {
    padding-bottom: 18px;
    color: #7c7c7c;
    text-align: center;
  }
  ul {
    @extend .flex_v_h;
    padding-bottom: 30px;
    li {
      width: 50px;
      height: 50px;
      margin: 0 15px;
    }
    .wx {
      @include getBgImg("../../../assets/images/user_center/wx_icon.png");
    }
    .qq {
      @include getBgImg("../../../assets/images/user_center/qq_icon.png");
    }
    .wb {
      @include getBgImg("../../../assets/images/user_center/wb_icon.png");
    }
  }
}
</style>
