<template>
  <div class="Page signPage">
    <header class="mod_header">
      <navBar :pageTitle="'签到领星星'"></navBar>
    </header>
    <div class="main">
      <p class="att_tips">您已连续签到 <span>{{signNum}}</span> 天</p>
      <ul class="prize_list">
        <!-- 不能领取加类名disabled -->
        <li v-for="(item,index) in signGiftList " :key="index"
          :class="{'recevied':item.receiveStatus==0,'disabled':item.receiveStatus>1}">
          <p>{{item.hdGiftName.substring(0,3)}}</p>
          <img :src="require('assets/images/guess/starday'+index+'.png')" alt />
          <a class="prize_get_btn" v-if="item.receiveStatus>1"
            @click="showMessage('暂不可领取')">{{item.hdGiftCount?item.hdGiftCount:item.sevenFlag}}</a>
          <a class="prize_get_btn" v-else-if="item.receiveStatus ==0"
            @click="showMessage('已领取')">{{item.hdGiftCount?item.hdGiftCount:item.sevenFlag}}</a>

          <a class="prize_get_btn" v-else
            @click="getPrize(index)">{{item.hdGiftCount?item.hdGiftCount:item.sevenFlag}}</a>

        </li>
      </ul>
      <div class="pop_tips" v-if="signTips">
        <p v-if="!randomFlag">获得</p>
        <p v-else>随机获得</p>
        <span>{{signAwardNum}}</span>
      </div>
    </div>
  </div>
</template>

<script>
import navBar from "../../components/header/nav_bar/index";
// import Vue from "vue";
import { mapGetters, mapActions } from "vuex";
export default {
  components: { navBar },
  props: [],

  data() {
    return {
      signGiftList: [], //签到礼品
      signTips: false,
      signAwardNum: 0, //随机获得的星星数量
      randomFlag: false, //显示随机的弹出提示
      signNum: 0
    };
  },
  mounted() {
    //屏蔽app处理
    if (this.$route.query.clientType == 3) {
      this.$router.push({
        path: "/home",
        query: {}
      });
    }
    this.openSignPop();
  },
  methods: {
    //签到领取
    openSignPop() {
      return this.$post("/api/hdsign/queryHdGiftInfo")
        .then(rsp => {
          const dataResponse = rsp;
          if (dataResponse.code == 200) {
            this.signGiftList = dataResponse.data.signGift;
            this.signNum = dataResponse.data.signNum;
            console.log(this.signGiftList);
          }
        })
        .catch(error => {
          console.log(error);
        });
    },
    getPrize(index) {
      return this.$post("/api/hdsign/signIn")
        .then(rsp => {
          const dataResponse = rsp;
          if (dataResponse.code == 200) {
            console.log("签到");
            let that = this;
            this.signGiftList[index].receiveStatus = 0;
            if (this.signGiftList[index].sevenFlag) {
              this.randomFlag = true;
            }
            this.signTips = true;
            this.signAwardNum = dataResponse.data.giftCount;
            setTimeout(() => {
              that.signTips = false;
            }, 1500);
            //刷新用户余额
            // this.$emit("updateSign", dataResponse.data.giftRecScore);
          } else {
            this.$toast(dataResponse.message);
          }
        })
        .catch(error => {
          console.log(error);
        });
    },
    //弹窗提示
    showMessage(msg) {
      this.$toast(msg);
    }
  }
};
</script>

<style lang="scss">
.signPage {
  .back::before,
  .back::after {
    background-color: #a26767 !important;
  }
}
</style>


<style lang='scss' scoped>
@import "../../assets/common/_base";
@import "../../assets/common/_mixin";

.Page {
  background: #1f1212;
}

.main {
  padding-bottom: 37.33vw;
}

.mod_header {
  background-color: #321919;
}

.nav_bar {
  color: #fedcd7 !important;
}

.att_tips {
  padding: 4.1333vw 0 0.1333vw;
  font-size: 3.7333vw;
  color: #fedcd7;
  text-align: center;
  span {
    color: #f6b70d;
  }
}

.pop_tips {
  @extend .g_v_c_mid;
  width: 57.33vw;
  padding: 5.33vw 0;
  text-align: center;
  background-color: #34201d;
  p {
    font-size: 3.73vw;
    color: #fff;
  }
  span {
    display: block;
    padding-top: 5.33vw;
    font-size: 5.33vw;
    color: #f6b70d;
  }
}
.prize_list {
  @extend .flex_hc;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  padding: 1.33vw 0 0 2.67vw;
}
li {
  width: 29.87vw;
  height: 37.33vw;
  padding-bottom: 5.33vw;
  margin: 2.67vw 2.4vw 0 0;
  @include getBgImg("../../assets/images/guess/sign_bg.png");
  background-size: 100% 100% !important;
  box-shadow: 0px 6px 8px 0px rgba(0, 0, 0, 0.03);
  text-align: center;
  &.disabled,
  &.recevied {
    @include getBgImg("../../assets/images/guess/sign_disabled.png");
    p,
    a,
    img {
      opacity: 0.5;
    }
  }
  &.recevied {
    position: relative;
    &::after {
      content: "";
      @extend .g_c_mid;
      top: 9.6vw;
      width: 21.87vw;
      height: 12.8vw;
      @include getBgImg("../../assets/images/guess/recevied.png");
    }
  }
  p {
    font-size: 3.2vw;
    height: 6.13vw;
    line-height: 6.13vw;
    color: #fedcd7;
  }
  img {
    display: block;
    height: 6.93vw;
    margin: 5.87vw auto 7.2vw;
  }
}
.prize_get_btn {
  display: inline-block;
  width: 21.3vw;
  line-height: 6.67vw;
  font-size: 5.07vw;
  font-weight: bold;
  color: #f6b70d;
  border: 2px solid #f6b70d;
  border-radius: 8vw;
}
</style>
