<template>
  <div class="Page matchToolPage">
    <header class="mod_header">
      <match-tab :quizShow='quizShow' :currentTab='1'></match-tab>
    </header>
    <div class="match_tab">
      <ul>
        <li :class="{active:tabIndex == index}" @click="switchTab(index)" v-for="(item,index) in dataList" :key="index">
          {{item}}</li>
      </ul>
    </div>
    <div class="main" id='mainId'>
      <mescroll ref="mescroll" :isShowEmpty="false" @downCallback="downCallback" @upCallback="upCallback"
        @mescrollInit="mescrollInit">
        <match-list :matchInfoList="matchInfoList"></match-list>
        <noData v-if="noData"></noData>
      </mescroll>
    </div>
    <footer class="mod_footer">
      <tabbar :matchToolFlag='true'></tabbar>
    </footer>
  </div>
</template>

<script>
import tabbar from "../../components/tabbar/index";
import navBar from "components/header/nav_bar/index.vue";
import matchList from "./components/matchlist.vue";
import mescroll from "../../components/common/mescroll.vue";
import sessionStorage from "../../libs/storages/sessionStorage";
import noData from "../../components/no_data/index.vue";
import matchTab from "../match/components/tab.vue";

export default {
  components: { navBar, matchList, mescroll, noData, matchTab, tabbar },
  props: [],
  data() {
    return {
      noData: false,
      createFlag: false, // 是否可以创建赛事，
      tabIndex: 0,
      currPageSize: 10,
      // dataList: ["赛事列表", "我的赛事", "创建赛事", "我的营地"],
      dataList: [],
      toolMatchParam: {
        pageNo: 1,
        pageSize: 10,
        status: 0, //初始加载首页赛事信息，剔除无效赛事
        showUserMacth: false // false展示所有赛事信息，true展示个人参赛信息
      },
      mescroll: null,
      mescrollConfig: {
        warpId: "mainId", //设置置顶时，必须设置父容器ID
        hasToTop: true //默认不开启回到顶部项
      },
      matchInfoList: [], //赛事信息
      quizShow: true
    };
  },
  created() {
    //展示个人参赛信息
    if (sessionStorage.get("tabIndex") == 1) {
      this.tabIndex = sessionStorage.get("tabIndex");
      this.toolMatchParam.showUserMacth = true;
    } else {
      this.tabIndex = 0;
    }
  },
  mounted() {
    this.$refs.mescroll.config = this.mescrollConfig;
    this.checkCanCreateMatch();

    this.$wxApi.wxRegister({
      title: "枫叶赛事",
      desc: "枫叶电竞邀你来参赛啦！",
      imgUrl:
        "http://rs.esportzoo.com/svn/esport-res/mini/images/default/juzi_logo.jpg"
    });
  },
  methods: {
    checkCanCreateMatch() {
      return this.$post("/api/matchtool/canCreateMatch")
        .then(rsp => {
          const dataResponse = rsp;
          if (dataResponse.code == 200) {
            this.createFlag = dataResponse.data;
            if (this.createFlag == true) {
              this.dataList = ["赛事列表", "我的赛事", "创建赛事", "我的营地"];
            } else {
              this.dataList = ["赛事列表", "我的赛事", "我的营地"];
            }
          }
        })
        .catch(error => {
          console.log(error);
        });
    },

    switchTab(index) {
      this.tabIndex = index;
      sessionStorage.set("tabIndex", index);
      if (index == 1) {
        this.toolMatchParam.showUserMacth = true;
      } else if (index == 0) {
        this.toolMatchParam.showUserMacth = false;
      } else if (index == 2 && this.createFlag == true) {
        this.$router.push({
          path: "/matchTool/createMatch",
          query: {}
        });
      } else if ((index == 2 && this.createFlag == false) || index == 3) {
        this.$router.push({
          path: "/community",
          query: {}
        });
      }
      this.downCallback();
    },

    mescrollInit(mescroll) {
      this.mescroll = mescroll; // 如果this.mescroll对象没有使用到,则mescrollInit可以不用配置
      this.mescroll.setBounce(true);
    },
    downCallback() {
      let param = {};
      this.toolMatchParam.pageNo = 1;
      param = this.toolMatchParam;
      this.matchInfoList = [];
      this.currPageSize = 10;
      this.getPageData(param).then(() => {
        this.$nextTick(() => {
          this.mescroll.endSuccess(this.currPageSize);
        });
      });
    },
    upCallback() {
      this.loadMore();
    },
    loadMore() {
      this.toolMatchParam.pageNo += 1;
      let param = {};
      param = this.toolMatchParam;
      this.getPageData(param).then(() => {
        this.$nextTick(() => {
          this.mescroll.endSuccess(this.currPageSize);
        });
      });
    },
    /**获取分页比赛数据 */
    getPageData(param) {
      if (!param) {
        param = {};
        param = this.toolMatchParam;
      }
      console.log("分页参数", param);
      return this.$post("/api/matchtool/homeMatch", param)
        .then(rsp => {
          const dataResponse = rsp;
          if (dataResponse.code == "200") {
            console.log(dataResponse, "getPageData---请求成功");
            if (dataResponse.data.homeResult == null) {
              // this.$toast("暂无赛事信息");
              this.currPageSize = 0;
            } else if (dataResponse.data.homeResult.length > 0) {
              this.currPageSize = dataResponse.data.homeResult.length;
              this.matchInfoList = this.matchInfoList.concat(
                dataResponse.data.homeResult
              );
              console.log(this.matchInfoList, "首页赛事信息");
            }
            if (this.matchInfoList.length == 0) {
              this.noData = true;
            } else {
              this.noData = false;
            }

            return this.matchInfoList;
          }
        })
        .catch(error => {
          console.log(error);
        });
    }
  }
};
</script>

<style lang="scss">
.matchToolPage {
  .nav_bar .back {
    display: none;
  }
  .no_data {
    margin-top: 40vw;
  }
}
</style>

<style lang='scss' scoped>
@import "../../assets/common/_base";
@import "../../assets/common/_mixin";

.match_tab {
  margin: 8px 12px;
  height: 33px;
  overflow: hidden;
  ul {
    @extend .flex;
    height: calc(100% + 6px);
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  li {
    @extend .flex_v_h;
    flex: none;
    -webkit-flex: none;
    width: 85px;
    height: 33px;
    font-size: 15px;
    color: #999;
    background-color: #fff;
    border-radius: 3px;
    margin-right: 8px;
    @include getRadiusBorder(#ddd, all, 6px);
    &.active {
      color: #fff;
      background-color: #ff7e00;
      @include getRadiusBorder(#c36000, all, 6px);
    }
  }
}
</style>
