<template>
  <div>
    <video-player class="video-player vjs-custom-skin" id="myVideo" ref="videoPlayer" :playsinline="true"
      :options="playerOptions" @statechanged="playerStateChanged($event)" @play="onPlayerPlay($event)"
      @error="onError($event)"></video-player>
  </div>
</template>

<script>
import "video.js/dist/video-js.css";
import "vue-video-player/src/custom-theme.css";
import { videoPlayer } from "vue-video-player";
import "videojs-contrib-hls";
export default {
  data() {
    return {
      playerOptions: {} //存放播放器的配置文件
    };
  },
  methods: {
    onLive(onM3u8, onCover) {
      var that = this;

      this.playerOptions = {
        notSupportedMessage: "此视频暂无法播放，请稍后再试",
        autoplay: false, //如果true,浏览器准备好时开始回放。
        loop: false, // 导致视频一结束就重新开始。
        // preload: 'auto', // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）
        language: "zh-CN",
        aspectRatio: "16:9", // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如"16:9"或"4:3"）
        fluid: false, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。
        sources: [
          {
            type: "application/x-mpegURL", //如果是直播的话  此处务必这样配置
            src: onM3u8 //视频url地址
          }
        ],
        poster: onCover, //你的封面地址
        width: document.documentElement.clientWidth,
        control: {
          //此处的设置都未生效，不知道为啥，我用爆破的方式解决的
          timeDivider: false,
          durationDisplay: false,
          remainingTimeDisplay: false,
          fullscreenToggle: true //全屏按钮
        }
      };
    }
  },
  mounted() {
    this.onLive(
      "http://video.esportzoo.com/sv/c4c681b-16c51826c1a/c4c681b-16c51826c1a.mp4",
      "newCover"
    );
  },
  components: {
    videoPlayer
  }
};
</script>

<style lang='scss'>
</style>
